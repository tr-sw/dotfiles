# .bashrc

#----------------------------------
# Source global definitions
#----------------------------------

if [[ -f /etc/bashrc ]] ; then
 source /etc/bashrc
fi


#----------------------------------
# Source 'completion' support
#----------------------------------

if [[ -f /etc/bash_completion  ]] ; then
  source /etc/bash_completion
fi

if [[ -f ${HOME}/.bash/git-completion.bash ]] ; then
  source ${HOME}/.bash/git-completion.bash
fi



#-----------------------------------------------
# Colors and Prompt
#-----------------------------------------------

export PS1='\n\033[0;32m\n\u@\h:\033[00m \w\n$ '

# Source the git bash completion file
if [[ -f ~/.bash/git-prompt.sh ]] && [[ $(id -u) -ne 0 ]] ; then
  source ~/.bash/git-prompt.sh
  GIT_PS1_SHOWCOLOR_HINTS=true
  GIT_PS1_SHOWDIRTYSTATE=true
  GIT_PS1_SHOWSTASHSTATE=true
  GIT_PS1_SHOWUPSTREAM="auto"

  PS1='\033[0;32m\n\u@\h:\[\033[32m\]$(__git_ps1 " (%s)")\[\033[00m\] \w \012$ '

  # This is an attempt at avoiding error message for root user, which does not have __git_ps1
  # Better to add 'red' prompt for root user in /root/.bashrc
  # PS1='\033[0;32m\n\u@\h:\[\033[32m\]$(type -t __git_ps1 >/dev/null 2>&1 $$ __git_ps1 " (%s)")\[\033[00m\] \w \012$ '
fi

export PS1


#-----------------------------------------------
#  Misc Settings
#-----------------------------------------------

export EDITOR=vim

# Setting umask will cause the following error:
# Syntastic: error: exception running system('uname'): Vim(let):E484: Can't open file /tmp/vDxlRus/0
# umask 755

ulimit -S -c 0      # Don't want coredumps.
set -o notify
set -o noclobber
set -o ignoreeof

shopt -u mailwarn
unset MAILCHECK        # Don't want my shell to warn me of incoming mail.


if [[ "$TERM" == "xterm"  ]] ; then
  # No it isn't, it's gnome-terminal
  export TERM=xterm-256color
fi


#-----------------------------------------------
#  Load functions 
#-----------------------------------------------

if [[ -f ${HOME}/.bash/functions.bash ]] ; then
    source ${HOME}/.bash/functions.bash
fi


#-----------------------------------------------
#  Load aliases
#-----------------------------------------------

if [[ -f ${HOME}/.bash_aliases ]] ; then
    source ${HOME}/.bash_aliases
fi


#---------------------------------------------
# Set local environment using env.d scripts
#---------------------------------------------

ENV_DIR=${HOME}/env.d

if [[ -d $ENV_DIR ]] ; then
    for f in `ls $ENV_DIR/*setenv*.{bash,sh} 2>/dev/null`  ; do
        source "${f}"
    done
    unset f
fi
